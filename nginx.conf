server {
    listen 80;
    server_name <hostname>;

    # redirect all http to https
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name <hostname>;

    ssl_certificate /etc/letsencrypt/live/<hostname>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<hostname>/privkey.pem;
    # disable SSLv2
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # ciphers' order matters
    ssl_ciphers "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!aNULL";

    # the Elliptic curve key used for the ECDHE cipher.
    ssl_ecdh_curve secp384r1;

    # use command line
    # openssl dhparam -out dhparam.pem 2048
    # to generate Diffie Hellman Ephemeral Parameters
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    # let the server choose the cipher
    ssl_prefer_server_ciphers on;

    # turn on the OCSP Stapling and verify
    ssl_stapling on;
    ssl_stapling_verify on;

    # http compression method is not secure in https
    # opens you up to vulnerabilities like BREACH, CRIME
    gzip off;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /path/to/your/project;
    }
    
    location ~ /service/resources/(JsApiTicket|AccessToken) {
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:6000;
        proxy_set_header X-Forwarded-Proto $scheme;
        allow <allow-ip>;
        allow <allow-ip>;
        allow <allow-ip>;
        deny all;

    }

    location ~ /service/resources/signature {
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:6000;
        proxy_set_header X-Forwarded-Proto $scheme;
                                                            
    }
    
    access_log /mnt/log/nginx/<hostname>/access.log;
    error_log /mnt/log/nginx/<hostname>/error.log;
}
